export interface TransactionData {
  TransactionID: string;
  RetailTransactionLineItemSequenceNumber: number;
  CustomerOrderID: string;
  CustomerOrderLineItemSequenceNumber: string;
  BeginDateTimestamp: string;
  VoidFlag: boolean;
  EndDateTimestamp: string;
  EntryMethodCode: string;
  RetailTransactionLineItemTypeCode: string;
  RetailTransactionLineItemEntryModeCode: string;
  ZfreeText: string;
  saleReturnLineItem: {
    TransactionID: string;
    RetailTransactionLineItemSequenceNumber: number;
    InventoryControlFulfillment: string;
    SellingLocationID: string;
    BusinessUnitGroupID: string;
    ItemIDEntryMethodCode: string;
    ItemLookupMethodCode: string;
    POSItemID: string;
    POSItemIDQualifier: string;
    ItemID: string;
    POSDepartmentID: string;
    UnitOfMeasureCode: string;
    SaleReturnItemType: string;
    SubItemType: string;
    SellUnitRetailPriceEntryMethodCode: string;
    GiftReceiptFlag: boolean;
    ItemTraceableUnitID: string;
    ActionCode: string;
    Quantity: number;
    ReasonCode: string;
    FulfillmentAcknowledgementLineItemSequenceNumber: number;
    ZdiscountAllowed: boolean;
    Zbrand: null;
    saleReturnTaxLineItem: {
      TransactionID: string;
      RetailTransactionLineItemSequenceNumber: number;
      SalesTaxSequenceNumber: number;
      TaxGroupRuleID: string;
      UsageCode: string;
      ReasonCode: string;
      TaxIncludedInPricesFlag: boolean;
      TaxAtSourceFlag: boolean;
      TaxableAmount: number;
      TaxablePercent: number;
      TaxPercent: number;
      TaxAmount: number;
    }[];
    lineItemChecks: {
      giftcard: {
        relevant: boolean;
        processStatus: string;
        signaturePrint: string;
        normalPrint: string;
      };
      serialNumber: {
        serialNumberReq: boolean;
      };
      digitalArticle: {
        relevant: boolean;
        processStatus: string;
        receiptText: string;
        digitalArticleReference: string;
      };
      posa: {
        relevant: boolean;
        processStatus: string;
        receiptText: string;
        POSAReference: string;
      };
      valueCodes: {
        relevant: null;
        processStatus: string;
        receiptText: string[];
      };
      eatInside: {
        relevant: boolean;
      };
    };
    RegularUnitPrice: number;
    ActualUnitPrice: number;
    ActualUnitPriceQuantity: string;
    ZposPrice: number;
    SellUnitRetailPriceDerivationMethodCode: string;
    BulkUnitCount: string;
    ExtendedAmount: number;
    UnitDiscountAmount: number;
    ExtendedDiscountAmount: number;
    UnitCostPrice: string;
    UnitCostPriceQuantity: string;
    UnitListPrice: string;
    UnitListPriceQuantity: string;
    InventoryValuePrice: string;
    InventoryValuePriceQuantity: string;
    UnitPriceIncreaseAmount: number;
    ExtendedPriceIncreaseAmount: number;
  };
  displayFields: {
    TransactionID: string;
    RetailTransactionLineItemSequenceNumber: number;
    selected: boolean;
    visible: boolean;
    blocked: boolean;
    isDirty: boolean;
    customerOrder: boolean;
    ActionCode: string;
    valueCodes: boolean;
    itemID: string;
    gtin: string;
    description: string;
    receiptText: string;
    imageThumb: string;
    serialNumberReq: boolean;
    insuranceProposal: boolean;
    ZdiscountAllowed: boolean;
    ZfreeText: string;
    VoidFlag: boolean;
    ItemTraceableUnitID: string;
    GiftReceiptFlag: boolean;
    RegularUnitPrice: string;
    ActualUnitPrice: string;
    Quantity: string;
    UnitOfMeasureCode: string;
    Tax: string;
    discountText: boolean;
    discountType: string;
    total: string;
  };
  tenderLineItem: {
    TransactionID: string;
    RetailTransactionLineItemSequenceNumber: number;
    TenderTypeCode: string;
    ZtenderDescription: string;
    TenderAccountNumber: string;
    TenderAmount: number;
    TenderSubTypeCode: string;
    ReasonCode: string;
    AccountNumber: string;
    CoPayFlag: string;
    ForeignCurrencyAmount: number;
    ForeignCurrencyID: string;
    ExchangeRate: number;
    AmountAppliedToTransaction: number;
    TipAmount: number;
    TipForeignCurrencyAmount: number;
    CashbackForeignCurrencyAmount: number;
    AddressVerificationCode: string;
    TenderMediaBrandID: number;
    IsChangeFlag: boolean;
    CashbackAmount: number;
    tenderLineItemAuthorization: {
      TransactionID: string;
      RetailTransactionLineItemSequenceNumber: number;
      AuthorizationSequenceNumber: number;
      TenderAuthorizationID: string;
      TenderAuthorizationTerminalID: string;
      AuthorizationDeclineReasonCode: string;
      TenderAuthorizationProviderID: string;
      ZTenderAuthorizationProviderName: string;
      PreAuthorizationID: string;
      RequestedAmount: number;
      RequestedChangeAmount: number;
      AdjudicationCode: string;
      AuthorizedChangeAmount: string;
      ReferenceNumber: string;
      AuthorizationDatetime: string;
      HostAuthorizedFlag: boolean;
      MissingElectronicSignatureReasonCode: string;
      ElectronicSignature: string;
      HostText: string;
      CustomerPresentFlag: boolean;
      ForceOnlineFlag: boolean;
      MerchantNumber: string;
      CardHolderVerificationTypeCode: string;
      CardPresentFlag: boolean;
      ISOCurrencyCode: string;
      ZAggregateID: string;
      ZsignaturePrint: string;
    }[];
    creditDebitCardTenderLineItem: {
      TransactionID: string;
      RetailTransactionLineItemSequenceNumber: number;
      CreditDebitCardTypeCode: string;
      CardIssuerCode: string;
      AccountNumber: string;
      CardEntryMethodCode: string;
      EntrySourceCode: string;
      PersonalIDRequiredTypeCode: string;
      PersonalIDReferenceNumber: string;
      AuthorizationMethodCode: string;
      Track1CreditCardBitMap: string;
      Track2CreditCardBitMap: string;
      Track3CreditCardBitMap: string;
      AdjudicationCode: string;
      CardExpirationDate: string;
      CardHolderName: string;
      CardIssuerSequenceNumber: string;
      CardStartDate: string;
      ServiceCode: string;
      Track4CreditCardBitMap: string;
      ReconciliationCode: string;
    };
  };
}
